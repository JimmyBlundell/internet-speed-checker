{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/history-details/history-details.component.ts","./src/app/components/history-details/history-details.component.html","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/app/services/speed-test.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HistoryDetailsComponent } from './components/history-details/history-details.component';\nimport { MainPageComponent } from './components/main-page/main-page.component';\n\n\nconst routes: Routes = [\n  {path : '', component : MainPageComponent},\n  {path : 'history-details', component : HistoryDetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgxGaugeModule } from 'ngx-gauge';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { MainPageComponent } from './components/main-page/main-page.component';\n\nimport { SpeedTestService } from './services/speed-test.service';\nimport { HistoryDetailsComponent } from './components/history-details/history-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainPageComponent,\n    HistoryDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatGridListModule,\n    NgxGaugeModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule\n  ],\n  providers: [SpeedTestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { SpeedTestService } from '../../services/speed-test.service';\n\n@Component({\n  selector: 'app-history-details',\n  templateUrl: './history-details.component.html',\n  styleUrls: ['./history-details.component.css']\n})\nexport class HistoryDetailsComponent implements OnInit {\n\n  displayedColumns: string[] = ['timestamp', 'download', 'upload', 'ping'];\n  dataSource = []\n\n  constructor(private SpeedTestService : SpeedTestService) { }\n\n  ngOnInit(): void {\n    this.SpeedTestService.getHistory()\n      .subscribe(res => {\n        if(res.success ) {\n          this.dataSource = res.history;\n          console.log(res)\n        }\n        else { \n\n        }\n      })\n  }\n\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"timestamp\">\n        <th mat-header-cell *matHeaderCellDef> Timestamp </th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.time }} </td>\n      </ng-container>\n\n    <ng-container matColumnDef=\"download\">\n      <th mat-header-cell *matHeaderCellDef> Download Details </th>\n      <td mat-cell *matCellDef=\"let element\">  \n          <a>\n            Bandwidth : {{ element.speed.download.bandwidth*0.00001}} Mbps    \n          </a>\n          <a>\n            Bytes : {{ element.speed.download.bytes}}    \n          </a>\n          <a>\n            Elapsed : {{ element.speed.download.elapsed}} ms\n          </a>         \n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"upload\">\n      <th mat-header-cell *matHeaderCellDef> Upload Details </th>\n      <td mat-cell *matCellDef=\"let element\">  \n        <a>\n          Bandwidth : {{ element.speed.upload.bandwidth*0.00001}} Mbps    \n        </a>\n        <a>\n          Bytes : {{ element.speed.upload.bytes}}    \n        </a>\n        <a>\n          Elapsed : {{ element.speed.upload.elapsed}} ms\n        </a>         \n    </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"ping\">\n        <th mat-header-cell *matHeaderCellDef> Ping Detalis </th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.speed.ping.latency }} ms  </td>\n        <td mat-cell *matCellDef=\"let element\">  {{ element.speed.ping.jitter }} </td>\n      </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { SpeedTestService } from '../../services/speed-test.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor(private SpeedTestService : SpeedTestService, private router : Router, private _snackBar: MatSnackBar) { }\n\n  speedData : any = {\n    ping : {},\n    download : {},\n    upload : {}\n  };\n  uploadGauge = {\n    gaugeType : \"arch\",\n    gaugeValue : 0,\n    gaugeLabel : \"Upload Speed\",\n    gaugeAppendText : \"Mbps\"\n  }\n\n  downloadGauge = {\n    gaugeType : \"arch\",\n    gaugeValue : 0,\n    gaugeLabel : \"Download Speed\",\n    gaugeAppendText : \"Mbps\"\n  }\n\n  waiting : boolean = false;\n  cancelWait : boolean = false\n\n  gaugeType = \"arch\";\n  gaugeValue = 28.3;\n  gaugeLabel = \"Speed\";\n  gaugeAppendText = \"Mbps\";\n\n  ngOnInit(): void {\n    \n  }\n\n  progreassBar () {\n    if(!this.waiting) {\n      this.waiting = true\n    }\n    else { \n      this.waiting = false\n    }\n  }\n\n  getSpeed () {\n    this.progreassBar()\n    this._snackBar.open(\"Getting speed. Please wait\", \"\", {\n      duration: 2000,\n    });\n    this.SpeedTestService.checkSpeed()\n      .then(res => {\n        if(res.success) {\n          this.speedData = res.speed;\n          this.uploadGauge.gaugeValue = this.speedData.upload.bandwidth*0.00001;\n          this.downloadGauge.gaugeValue = this.speedData.download.bandwidth*0.00001;\n        console.log(this.speedData)\n        }\n        else {\n          this._snackBar.open(res.err, \"\", {\n            duration: 2000,\n          });\n        }\n      })\n      .finally(()=>{\n        this.progreassBar()\n      })\n  }\n\n  historyAndDetails () {\n    this.router.navigate(['/history-details'])\n  }\n\n}\n","<mat-card class = \"main\">\n\n  \n  <br>\n  <br>\n  <mat-card-title>SpeedTest</mat-card-title>\n  <br>\n  <br>\n  <br>\n  <br>\n  <mat-card-content class = \"d-flex justify-content-center\">\n   \n    <button mat-button color=\"primary\" class = \"submit-button\" (click)=\"getSpeed()\">\n    <div class=\"spinner\" *ngIf=\"waiting\">\n      <mat-spinner [diameter]=20 ></mat-spinner> \n    </div>  \n    <h2>Start</h2>\n    </button>\n    <!-- <button mat-button color=\"secondary\" class = \"submit-button\" (click)=\"progreassBar()\">\n      <div class=\"spinner\" *ngIf=\"cancelWait\">\n        <mat-spinner [diameter]=20 ></mat-spinner> \n      </div>  \n      <h2>Cancel</h2>\n      </button> -->\n      <button mat-button color=\"primary\" class = \"submit-button\" (click) = \"historyAndDetails()\">\n        <h2>Speed Test History and Details</h2>\n        </button>\n      \n  </mat-card-content>\n  <br>\n  <br>\n  <br>\n\n  <mat-card-title>Ping</mat-card-title>\n<br>\n\n<mat-card-content class = \"d-flex justify-content-center\">\n  \n  <mat-card-content class = \"label\">\n    <h3>Latency : </h3>\n    <a> {{ speedData.ping.latency}} </a>  \n  </mat-card-content>\n\n  <mat-card-content class = \"label\">\n    <h3>Jitter : </h3>\n    <a> {{ speedData.ping.jitter }}</a>\n  </mat-card-content>  \n\n\n</mat-card-content>\n\n<br>\n<br>\n<br>\n\n\n\n\n\n<mat-card-title>Speed</mat-card-title>\n<br>\n<mat-card-content class = \"d-flex justify-content-center\">\n\n  \n<ngx-gauge class = \"guage\"\n[type]=\"uploadGauge.gaugeType\" \n[size]=120\n     [value]=\"uploadGauge.gaugeValue\" \n     [label]=\"uploadGauge.gaugeLabel\"  \n     [append]=\"uploadGauge.gaugeAppendText\">\n</ngx-gauge>\n\n<ngx-gauge class = \"guage\"\n[type]=\"downloadGauge.gaugeType\"\n[size]=120 \n     [value]=\"downloadGauge.gaugeValue\" \n     [label]=\"downloadGauge.gaugeLabel\"  \n     [append]=\"downloadGauge.gaugeAppendText\">\n</ngx-gauge>\n\n</mat-card-content>\n\n<br>\n\n<mat-card-content class = \"d-flex justify-content-center\">\n  \n  <mat-card-content class = \"label\">\n    <h3>Upload</h3>  \n  </mat-card-content>\n\n  <mat-card-content class = \"label\">\n    <h3>Download</h3>\n  </mat-card-content>\n  \n\n \n\n</mat-card-content>\n<br>\n\n<br>\n<br>\n<br>\n\n</mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeedTestService {\n\n  constructor(private http : HttpClient) { }\n\n  async checkSpeed () {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return await this.http.get <any> ('http://localhost:3000/speed-test/speed')\n      .toPromise()\n  }\n\n  getHistory () {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return this.http.get <any> ('http://localhost:3000/speed-test/history')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}